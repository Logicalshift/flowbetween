/***
 **
 ** FlowBetween File format version 1
 **
 ***/

/*
 *  ===== File declarations
 */

/*
 * The FlowBetween table indicates version information for this file and
 * contains a single record.
 */
CREATE TABLE FlowBetween (
    /* Data format version */
    DataVersion     INTEGER NOT NULL,

    /* Description of the version of FlowBetween that created this animation */
    FloVersion      TEXT NOT NULL,

    /* 1 if this was generating using a stable schema, 0 if generated using an unstable one */
    Stable          INTEGER NOT NULL
);

/*
 *  ===== The edit log
 */

/*
 * The edit log contains a list of edits made by the user
 */
CREATE TABLE Flo_EditLog (
    /* Order of this edit */
    Id      INTEGER NOT NULL PRIMARY KEY ASC AUTOINCREMENT,

    /* Type of edit (see Flo_EnumerationDescriptions for the values) */
    Edit    INTEGER NOT NULL
);

/*
 * The editlog size table provides the size parameter for edits that require one
 */
CREATE TABLE Flo_EL_Size (
    EditId      INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_EditLog(Id),

    X           REAL,
    Y           REAL
) WITHOUT ROWID;

/*
 * If an edit applies to a layer, this supplies the layer ID
 */
CREATE TABLE Flo_EL_Layer (
    EditId      INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_EditLog(Id),

    Layer       INTEGER NOT NULL
) WITHOUT ROWID;

/*
 * The time for edits that use one. Times here are measured in microseconds
 * from the start of the animation.
 */
CREATE TABLE Flo_EL_When (
    EditId      INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_EditLog(Id),

    AtTime      INTEGER NOT NULL
) WITHOUT ROWID;

/*
 * Associates an edit containing brush information with the brush
 */
CREATE TABLE Flo_EL_Brush (
    EditId          INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_EditLog(Id),

    DrawingStyle    INTEGER NOT NULL,
    Brush           INTEGER NOT NULL REFERENCES Flo_Brush_Type(Brush)
) WITHOUT ROWID;

/*
 * Associates an edit with a series of raw input points
 */
CREATE TABLE Flo_EL_RawPoint (
    EditId      INTEGER NOT NULL REFERENCES Flo_EditLog(Id),
    PointId     INTEGER NOT NULL,

    PosX        REAL NOT NULL,
    PosY        REAL NOT NULL,
    Pressure    REAL NOT NULL,
    TiltX       REAL NOT NULL,
    TiltY       REAL NOT NULL,

    PRIMARY KEY (EditId, PointId)
) WITHOUT ROWID;

/*
 * Associates a brush with a brush type
 */
CREATE TABLE Flo_Brush_Type (
    Brush       INTEGER NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    BrushType   INTEGER NOT NULL
);

/*
 * Provides an ink brush definition (BrushType == Ink)
 */
CREATE TABLE Flo_Brush_Ink (
    Brush           INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_Brush_Type(Brush),

    MinWidth        REAL NOT NULL,
    MaxWidth        REAL NOT NULL,
    ScaleUpDistance REAL NOT NULL
) WITHOUT ROWID;

/*
 * Associates an edit with any brush properties it may have
 */
CREATE TABLE Flo_BrushProperties (
    EditId      INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_EditLog(Id),

    Size        REAL NOT NULL,
    Opacity     REAL NOT NULL,
    Color       INTEGER NOT NULL REFERENCES Flo_Color_Type(Color)
) WITHOUT ROWID;

/*
 * Associates a colour with a colour type
 */
CREATE TABLE Flo_Color_Type (
    Color       INTEGER NOT NULL PRIMARY KEY ASC AUTOINCREMENT,
    ColorType   INTEGER NOT NULL
);

/*
 * A colour defined as an RGB triplet
 */
CREATE TABLE Flo_Color_Rgb (
    Color       INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_Color_Type(Color),

    R           REAL NOT NULL,
    G           REAL NOT NULL,
    B           REAL NOT NULL
) WITHOUT ROWID;

/*
 * A colour defined as an HSLuv triplet
 */
CREATE TABLE Flo_Color_Hsluv (
    Color       INTEGER NOT NULL PRIMARY KEY ASC REFERENCES Flo_Color_Type(Color),

    H           REAL NOT NULL,
    S           REAL NOT NULL,
    L           REAL NOT NULL
) WITHOUT ROWID;

/*
 *  ===== Enumeration descriptions
 */

/*
 * Provides information about what enumerable values mean
 */
CREATE TABLE Flo_EnumerationDescriptions (
    /* Name of the field containing an enumeration */
    FieldName   TEXT NOT NULL,

    /* Value of the field */
    Value       INTEGER NOT NULL,

    /* Name of this enumerable value as used in the API */
    ApiName     TEXT NOT NULL,

    /* Comment */
    Comment     TEXT,

    PRIMARY KEY (FieldName, ApiName)
);

/* The stable/unstable enumeration */
INSERT INTO Flo_EnumerationDescriptions(FieldName, Value, ApiName, Comment)
     VALUES ("Stable", 0,   "Unstable", "File was created with a development version of FlowBetween and may not conform to the final schema for this version"),
            ("Stable", 1,   "Stable",   "File was created using a stable version of the schema");

/* The possible types of edit */
INSERT INTO Flo_EnumerationDescriptions(FieldName, Value, ApiName, Comment)
     VALUES ("Edit", 0, "SetSize",                          "Sets the size of the animation"),
            ("Edit", 1, "AddNewLayer",                      "Adds a new layer with a particular ID to the animation"),
            ("Edit", 2, "RemoveLayer",                      "Removes a layer from the animation"),
            ("Edit", 3, "Layer::AddKeyFrame",               "Adds a new keyframe to a layer"),
            ("Edit", 4, "Layer::RemoveKeyFrame",            "Removes a keyframe from a layer"),
            ("Edit", 5, "Layer::Paint::SelectBrush",        "Selects a particular brush definition"),
            ("Edit", 6, "Layer::Paint::BrushProperties",    "Sets the brush properties"),
            ("Edit", 7, "Layer::Paint::BrushStroke",        "Represents a brush stroke with the specified raw properties");

/* Brush drawing style */
INSERT INTO Flo_EnumerationDescriptions(FieldName, Value, ApiName, Comment)
     VALUES ("DrawingStyle", 0, "Draw",     "Brush should draw onto the canvas"),
            ("DrawingStyle", 1, "Erase",    "Brush should erase from the current layer");

/* Types of brush definition */
INSERT INTO Flo_EnumerationDescriptions(FieldName, Value, ApiName, Comment)
     VALUES ("BrushType", 0,    "Simple",   "Simple brush (mainly used for testing)"),
            ("BrushType", 1,    "Ink",      "Ink brush");

/* Types of colour definition */
INSERT INTO Flo_EnumerationDescriptions(FieldName, Value, ApiName, Comment)
     VALUES ("ColorType", 0,    "RGB",      "RGB colour"),
            ("ColorType", 1,    "HSLUV",    "HSLuv colour");

/*
 *  ===== DEFAULT DATA
 */

INSERT INTO FlowBetween(DataVersion, FloVersion, Stable)
     VALUES (1, "Unknown", 0);
